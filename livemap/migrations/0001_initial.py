# Generated by Django 4.2.6 on 2023-10-14 12:50

from django.db import migrations, models
import django.db.models.deletion
import livemap.models


class Migration(migrations.Migration):
    initial = True

    dependencies = []

    operations = [
        migrations.CreateModel(
            name="Address",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("parking_lot_address", models.CharField(max_length=200)),
            ],
            options={
                "verbose_name_plural": "Addresses",
            },
        ),
        migrations.CreateModel(
            name="Country",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("country_name", models.CharField(max_length=100, unique=True)),
            ],
            options={
                "verbose_name_plural": "Countries",
            },
        ),
        migrations.CreateModel(
            name="ParkingLot",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("total_spots", models.PositiveIntegerField()),
                (
                    "spots_for_disabled",
                    models.PositiveIntegerField(blank=True, null=True),
                ),
                (
                    "is_private",
                    models.IntegerField(choices=[(0, "No"), (1, "Yes")], default=0),
                ),
                (
                    "is_free",
                    models.IntegerField(choices=[(0, "No"), (1, "Yes")], default=1),
                ),
                (
                    "geolocation",
                    models.JSONField(
                        help_text="Latitude and longitude of a parking lot. Ex.: [49.911848, 16.611212]",
                        validators=[livemap.models.validate_geolocation],
                    ),
                ),
                (
                    "address",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="livemap.address",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="VideoStreamSource",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("stream_source", models.URLField()),
                (
                    "processing_rate",
                    models.PositiveIntegerField(help_text="In seconds."),
                ),
                (
                    "parking_zone",
                    models.JSONField(
                        blank=True,
                        help_text="An array in a format [[[[int, int]], [[int, int]], ...]].",
                        null=True,
                    ),
                ),
                ("is_active", models.BooleanField(default=True)),
                (
                    "parking_lot",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="stream_sources",
                        to="livemap.parkinglot",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="Occupancy",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("occupied_spots", models.PositiveIntegerField(default=0)),
                ("timestamp", models.DateTimeField(auto_now_add=True)),
                (
                    "parking_lot",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="occupancies",
                        to="livemap.parkinglot",
                    ),
                ),
            ],
            options={
                "verbose_name_plural": "Occupancy",
                "get_latest_by": "timestamp",
            },
        ),
        migrations.CreateModel(
            name="City",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("city_name", models.CharField(max_length=50)),
                (
                    "country",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="livemap.country",
                    ),
                ),
            ],
            options={
                "verbose_name_plural": "Cities",
            },
        ),
        migrations.AddField(
            model_name="address",
            name="city",
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to="livemap.city"),
        ),
    ]
